/**
 * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
import type {AggregatedResult} from '@jest/test-result';
import type {Test} from '@jest/test-result';
import type {TestContext} from '@jest/test-result';

declare type Cache_2 = {
  [key: string]: [0 | 1, number];
};

export declare type ShardOptions = {
  shardIndex: number;
  shardCount: number;
};

/**
 * The TestSequencer will ultimately decide which tests should run first.
 * It is responsible for storing and reading from a local cache
 * map that stores context information for a given test, such as how long it
 * took to run during the last run and if it has failed or not.
 * Such information is used on:
 * TestSequencer.sort(tests: Array<Test>)
 * to sort the order of the provided tests.
 *
 * After the results are collected,
 * TestSequencer.cacheResults(tests: Array<Test>, results: AggregatedResult)
 * is called to store/update this information on the cache map.
 */
declare class TestSequencer {
  private _cache;
  _getCachePath(testContext: TestContext): string;
  _getCache(test: Test): 